#!/usr/bin/env bash
#
# Summary: Execute a command for each Node version
#
# Usage: nodenv each [-g] [-p] [-v] [--] <command> [arg1 arg2...]
#
# Executes a command for each Node version by setting NODENV_VERSION.
# Failures are collected and reported at the end.
#
# Options:
#   --help, -h             Show help/usage
#   --system, -g           Include the system `node`.
#   --parallel -p          Run everything in parallel using all cores.
#   --parallel=[n] -p=[n]  Run at most N parallel jobs.
#   --verbose, -v          Verbose mode. Prints a header for each node.
#
set -e
[ -n "$NODENV_DEBUG" ] && set -x

# Provide nodenv completions
if [ "$1" == --complete ]; then
  echo --system
  echo --verbose
  nodenv-shims --short
  exit
fi

for arg in "$@"; do
  case "$arg" in
    -h | --help )
      nodenv-help each
      exit
      ;;
    -g | --system )
      include_system=1
      ;;
    -p | --parallel )
      parallel="0"
      ;;
    -p=* | --parallel=* )
      parallel="${arg#*=}"
      ;;
    -v | --verbose )
      verbose=1
      ;;
    -- )
      shift
      break
      ;;
    "" | -* )
      nodenv-help --usage each >&2
      exit 1
      ;;
    * ) break ;;
  esac
  shift
done


if [ $# -eq 0 ]; then
  nodenv-help --usage each >&2
  exit 1
fi

if [ -n "$parallel" ]; then
    if ! command -v parallel &> /dev/null; then
        1>&2 echo "You must install the parallel tool in order to run jobs in parallel"
        exit 1
    fi
fi

GRAY=""
RED=""
YELLOW=""
NORMAL=""

if [ -t 1 ]; then
  GRAY="\\033[1;30m"
  RED="\\033[0;31m"
  YELLOW="\\033[0;33m"
  NORMAL="\\033[0m"
fi

failed_nodes=""

trap "exit 1" INT

exec_node() {
  if [ -n "$verbose" ]; then
    local header="===[$1]==================================================================="
    local header="${header:0:72}"
    local header="${header/[/[${YELLOW}}"
    local header="${header/]/${GRAY}]}"
    echo -e "${GRAY}${header}${NORMAL}"
  fi
  local version="$1"
  shift
  NODENV_VERSION="$version" "$@"
  [ -n "$verbose" ] && echo
}

NODES=$(printf "%s" "${include_system:+system}" "$(nodenv-versions --bare --skip-aliases)" | tr ' ' '\n')

if [ -n "$parallel" ]; then
    export -f exec_node
    export verbose YELLOW GRAY NORMAL
    echo "${NODES}" | parallel -j "${parallel}" --env YELLOW --env GRAY --env NORMAL --env verbose --env exec_node exec_node "{0}" "$@"
else
    for node in ${NODES}; do
        NODENV_VERSION="$node" "$@" || failed_nodes="$failed_nodes $node"
        if [ -n "$failed_nodes" ]; then
            echo -e "${RED}FAILED IN:${failed_nodes}${NORMAL}"
            exit 1
        fi
    done
fi
